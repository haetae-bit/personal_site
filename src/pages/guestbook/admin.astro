---
export const prerender = false;

import { actions } from "astro:actions";
import { db, desc, Guestbook } from "astro:db";
import Layout from "@/layouts/Layout.astro";
import formatDate from "@/utils/formatDate";

if (!import.meta.env.DEV) {
  console.error("you shouldn't be here...");
  return Astro.redirect("/guestbook");
}

const entries = await db.select().from(Guestbook).orderBy(desc(Guestbook.published));
---
<Layout title="guestbook admin">
  <h1>entries</h1>

  <section>
    <table>
      <thead>
        <tr>
          <th>username</th>
          <th>website</th>
          <th>message</th>
          <th>published</th>
          <th>reply</th>
          <th>edit</th>
        </tr>
      </thead>
      <tbody>
        {entries.map(entry => (
          <tr id={`${entry.id}`}>
            <td>{entry.username}</td>
            <td>{entry.website}</td>
            <td>{entry.message}</td>
            <td>{formatDate(entry.published, false, 'MMMM D, YYYY')}</td>
            <td>{entry.reply}</td>
            <td><button class="edit">edit</button></td>
          </tr>
        ))}
      </tbody>
    </table>

    <dialog id="edit-entry">
      <form id="edit-entry-form" action={actions.guestbook.reply} method="post">
        <input type="hidden" name="id" id="entryId" value="" />
        <p id="entry-username"></p>
        <p id="entry-website"></p>
        <div id="entry-message"></div>
        <p id="entry-published"></p>
        <label for="reply">Reply</label>
        <textarea name="reply" id="reply"></textarea>

        <button type="submit">Reply</button>
      </form>
    </dialog>
  </section>
</Layout>

<style>
  table {
    border-collapse: collapse;

    td {
      max-width: 30ch;
      text-overflow: ellipsis;
    }
  }
</style>

<script>
  const modal = document.getElementById("edit-entry") as HTMLDialogElement;
  const buttons = document.querySelectorAll("button.edit");
  buttons.forEach(button => {
    button.addEventListener("click", e => {
      const row = (e.target as HTMLElement).parentElement?.parentElement as HTMLTableRowElement;
      const id = row.id;
      const data = row.cells;
      const fields = document.querySelectorAll("[id^='entry-']");

      (document.getElementById("entryId") as HTMLInputElement).value = id;
      fields.forEach((field, i) => {
        field.innerHTML = data.item(i)!.innerText;
      });

      modal.showModal();
    });
  });
</script>
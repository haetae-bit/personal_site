---
import { Font, Image } from "astro:assets";
import { getCollection } from "astro:content";
import Layout from "./Layout.astro";
import Navbar from "~/Navbar.astro";
import formatDate from "@/utils/formatDate";
import moods from "@/utils/moods";

interface Props {
  id?: string;
  title: string;
  date: Date;
  currently?: {
    mood?: string;
    reading?: string;
    listening?: string;
    watching?: string;
    playing?: string;
  }
}

const { id, title, date, currently } = Astro.props;

const blog = await getCollection("blog");
blog.length = Math.min(blog.length, 12);
blog.sort((a, b) => b.data.pubDate!.valueOf() - a.data.pubDate!.valueOf());
---
<Layout {title}>
  <Fragment slot="head">
    <slot name="head" />
  </Fragment>
  <Navbar />

  <main>
    <article id={id}>
      <header>
        <h1>{title}</h1>
        <div class="info">
          <time datetime={formatDate(date, true)}>
            <span class="title">Date</span>
            <span class="desc">{formatDate(date)}</span>
          </time>
        </div>
      </header>

      <div class="content">
        <slot />
      </div>

      {currently && (
        <aside>
          <h2>Current</h2>
          {currently?.mood && (
            <dl>
              <dt class="title">Mood</dt>
              <dd class="desc">
                <Image src={`/src/assets/moods/${moods.find(mood => mood === currently?.mood)}.png`} width={36} height={36} alt="" />
                {currently.mood}
                </dd>
            </dl>
          )}
          {currently.playing && (
            <dl>
              <dt class="title">Game</dt>
              <dd class="desc">{currently.playing}</dd>
            </dl>
          )}
          {currently.watching && (
            <dl>
              <dt class="title">Show</dt>
              <dd class="desc">{currently.watching}</dd>
            </dl>
          )}
          {currently.reading && (
            <dl>
              <dt class="title">Book</dt>
              <dd class="desc">{currently.reading}</dd>
            </dl>
          )}
          {currently.listening && (
            <dl>
              <dt>Currently listening</dt>
              <dd>{currently.listening}</dd>
            </dl>
          )}
        </aside>
      )}
    </article>

    <slot name="pagination" />

    <nav id="blog-links">
      <div class="inner">
        <div class="nav-section">
          <h2>recent posts</h2>
          <ul>
            {blog.map(entry => (
              <li>
                <a href={`/blog/${entry.id}`} class="entry-title" aria-labelledby={entry.id}>
                  {entry.data.title}
                </a>
                <time datetime={formatDate(entry.data.pubDate!, true)}>
                  {formatDate(entry.data.pubDate!, false, "MM/DD/YY")}
                </time>
              </li>
            ))}
          </ul>
        </div>
        <div class="nav-section">
          <h2>other links</h2>
          <ul>
            <li><a href="/blog" class="link">archive</a></li>
            <li><a href="/blog/rss.xml" class="link">rss feed</a></li>
          </ul>
        </div>
      </div>
    </nav>
  </main>
</Layout>

<style>
</style>